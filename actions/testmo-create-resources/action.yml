name: create testmo resources
description: 'create a TestMo resource .json file'
inputs:
  resources_file:
    description: "file name where the resources will be stored"
    required: true
  python_version:
    description: "version of python"
    default: ""
    required: false
  runner:
    description: "runner hardware configuration label"
    default: ""
    required: false
  lm_eval_configuration:
    description: "list of configurations tested with LM-Eval"
    default: ""
    required: false
runs:
  using: "composite"
  steps:
    - run: |
        echo "composing TESTMO resources file ${{ inputs.resources_file }} ..."
        declare -A fields=( \
          ["python"]="${{inputs.python_version}}" \
          ["runner"]="${{inputs.runner}}" \
          ["lm_eval_configuration"]="${{inputs.lm_eval_configuration}}" \
        )
        for i in "${!fields[@]}"; do 
          if [[ "${fields[$i]}" ]]; then
            npx testmo automation:resources:add_field \
              --resources "${{ inputs.resources_file }}" \
              --type string \
              --name "${i}" \
              --value "${fields[$i]}"
          fi
        done
      shell: bash
