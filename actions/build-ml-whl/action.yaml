---
name: Build Wheel
description: Build wheel for ML repos e.g. sparseml, compressed-tensors

inputs:
  dev:
    description: If the build is a dev build
    required: false
    default: 'false'
  release:
    description: If the build is a release build
    required: false
    default: 'false'

outputs:
  whlname:
    description: wheel filename
    value: ${{ steps.build.outputs.whlname }}
  tarname:
    description: tar.gz filename
    value: ${{ steps.build.outputs.tarname }}
  status:
    description: status of wheel build
    value: ${{ steps.build.outputs.status }}

# can we just pass in build args instead of updating the variables in version.py?
runs:
  using: composite
  steps:
    - name: build
      id: build
      shell: bash
      run: |-
        pip install virtualenv
        virtualenv venv
        source venv/bin/activate
        pip install setuptools-scm==8.3.0

        BUILD_TYPE="dev"
        if ${{ inputs.release }}; then
            export BUILD_TYPE="release"
        elif ${{ inputs.dev }}; then
            export BUILD_TYPE="dev"
        else
            export BUILD_TYPE="nightly"
        fi
        echo "BUILD_TYPE=${BUILD_TYPE}"

        makefile_path=$(find . -type f -name "Makefile")
        cd $(dirname ${makefile_path})

        status=0
        make build || status=$?
        WHL_NAME=$(find dist -name '*.whl' -exec basename {} \;)
        TARGZ_NAME=$(find dist -name '*.tar.gz' -exec basename {} \;)

        # check if created wheel match build type
        if [[ $BUILD_TYPE = "dev" ]] && [[ ! "$WHL_NAME" =~ \.dev ]]; then
            echo "ERROR: $WHL_NAME not dev build"
            status=1
        fi
        if [[ $BUILD_TYPE = "release" ]] && ([[ "$WHL_NAME" =~ \.dev ]] || [[ "$WHL_NAME" =~ a[0-9]{8}- ]]); then
            echo "ERROR: $WHL_NAME not release build"
            status=1
        fi
        if [[ $BUILD_TYPE = "nightly" ]] && [[ ! "$WHL_NAME" =~ a[0-9]{8}- ]]; then
            echo "ERROR: $WHL_NAME not nightly build"
            status=1
        fi

        echo "=========== Build Status ==========="
        echo "whlname=$WHL_NAME" | tee -a "$GITHUB_OUTPUT"
        echo "tarname=$TARGZ_NAME" | tee -a "$GITHUB_OUTPUT"
        echo "status=${status}" | tee -a "$GITHUB_OUTPUT"
        exit ${status}
