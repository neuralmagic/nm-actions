---
name: Build Wheel
description: Build wheel for ML repos e.g. sparseml, compressed-tensors

inputs:
  dev:
    description: If the build is a dev build
    required: false
    default: false
  release:
    description: If the build is a release build
    required: false
    default: false

outputs:
  whlname:
    description: wheel filename
    value: ${{ steps.build.outputs.whlname }}
  tarname:
    description: tar.gz filename
    value: ${{ steps.build.outputs.tarname }}
  status:
    description: status of wheel build
    value: ${{ steps.build.outputs.status }}

# can we just pass in build args instead of updating the variables in version.py?
runs:
  using: composite
  steps:
    - name: build
      id: build
      shell: bash
      run: |-
        pip install virtualenv
        virtualenv venv
        source venv/bin/activate
        pip install setuptools-scm build
        BUILD_TYPE="dev"
        if ${{ inputs.release }}; then
            export BUILD_TYPE="release"
        elif ${{ inputs.dev }}; then
            export BUILD_TYPE="dev"
        else
            export BUILD_TYPE="nightly"
        fi
        makefile_path=$(find . -type f -name "Makefile")
        cd $(dirname ${makefile_path})
        status=0
        BUILD_TYPE=$BUILD_TYPE python -m build . || status=$?
        ls dist/; mkdir build-results
        echo "
        <testsuites>
            <testsuite errors=\"$status\" failures=\"$status\" name=\"build\" skipped=\"0\" tests=\"1\">
                <testcase classname=\"build\"/>
            </testsuite>
        </testsuites>" > build-results/result.xml
        echo "=========== Build log ==========="
        echo "$status"
        echo "whlname=$(find dist -name '*.whl' -exec basename {} \;)" >> "$GITHUB_OUTPUT"
        echo "tarname=$(find dist -name '*.tar.gz' -exec basename {} \;)" >> "$GITHUB_OUTPUT"
        echo "status=${status}" >> "$GITHUB_OUTPUT"
        exit ${status}
