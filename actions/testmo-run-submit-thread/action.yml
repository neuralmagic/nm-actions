---
name: submit results to testmo run
description: asynchronously submit step results to neuralmagic testmo run

inputs:
  testmo_url:
    description: testmo URL
    required: true
  testmo_token:
    description: testmo token
    required: true
  testmo_run_id:
    description: testmo run id
    required: true
  results:
    description: directory of JUnit '*.xml' formatted result files
    required: true
  step_status:
    description: status of reported step
    required: true

outputs:
  status:
    description: status of updating testmo. if there was no update, then 'success' is returned.
    value: ${{ steps.submit_thread.outputs.status }}

runs:
  using: composite
  steps:
    - id: submit_thread
      run: |
        # verify there are result files to be submitted
        ls -Al
        REPORT=1
        RESULTS=
        if [[ ! -d ${{ inputs.results }} ]]; then
          REPORT=0
        else
          RESULTS=$(find ${{ inputs.results }} -type f -name "*.xml")
        fi
        if [[ -z "${RESULTS}" ]]; then
          REPORT=0
        fi

        step_status() {
          # echo "green encased checkmark" if "${1} == 0"
          # echo "red X"                   if "${1} != 0"

          if [ "$1" -eq 0 ]; then
            # green check
            echo -e "\xE2\x9C\x85"
          else
            # red x
            echo -e "\xE2\x9D\x8C"
          fi
        }

        # submit results
        SUCCESS=0
        if [ ${REPORT} -eq 1 ]; then
          echo "submitting results to TESTMO run ..."
          # not checking testmo_url and token as this should be
          # called between "create" and "complete"
          npx testmo automation:run:submit-thread \
            --instance ${TESTMO_URL} \
            --run-id ${TESTMO_RUN_ID} \
            --results ${RESULTS} \
            -- step-status "${{ inputs.step_status }}" || SUCCESS=$?
        fi
        echo "status=${SUCCESS}" >> "$GITHUB_OUTPUT"
        exit ${SUCCESS}
      env:
        TESTMO_URL: ${{ inputs.testmo_url }}
        TESTMO_TOKEN: ${{ inputs.testmo_token }}
        TESTMO_RUN_ID: ${{ inputs.testmo_run_id }}
      shell: bash
