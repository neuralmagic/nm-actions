name: "Build PyPi"
description: "Build PyPi wheel"

inputs:
    dev:
      description: 'If the build is a dev build'
      required: false
      default: false
    release:
      description: 'If the build is a release build'
      required: false
      default: false
    name:
      description: 'Name to append to the wheel'
      required: false
     
outputs:
    filename:
      description: 'wheel filename'
      value: ${{ steps.build.outputs.filename }}

# can we just pass in build args instead of updating the variables in version.py?
runs:
  using: "composite"
  steps:
    - name: build 
      shell: bash
      run:  |
            pip3 install wheel
            pip3 install -e .
            name="${{ inputs.name }}"
            if ${{ inputs.release }}; then
              sed -i 's/is_release = False/is_release = True/g' src/${{ github.event.repository.name }}/version.py
            elif ${{ inputs.dev }}; then
              sed -i 's/is_dev = False/is_dev = True/g' src/${{ github.event.repository.name }}/version.py
              sed -i 's/dev_number = None/dev_number = '"$name"'/g' src/${{ github.event.repository.name }}/version.py
            fi
            status=$(make -B build || echo 'FAILED')
            echo "=========== Build log ==========="
            echo "filename=dist/*.whl" >> "$GITHUB_OUTPUT"
            echo "=========== Build status ==========="
            if [[ "${status}" = "FAILED" ]]; then
                echo "${{ github.event.repository.name }} build failed"
                exitCode=1
            else
                echo "${{ github.event.repository.name }} build success"
                exitCode=0
            fi
            echo "=========== Generated build ==========="
            ls dist/
